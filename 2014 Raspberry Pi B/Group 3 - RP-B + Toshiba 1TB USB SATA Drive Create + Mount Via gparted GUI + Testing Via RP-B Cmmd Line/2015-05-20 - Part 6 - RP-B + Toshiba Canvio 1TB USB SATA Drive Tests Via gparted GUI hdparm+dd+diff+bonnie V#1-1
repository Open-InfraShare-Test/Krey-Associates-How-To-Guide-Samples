
#############################################################################################
#
# Group 3 - Part 6 - RP-B + Toshiba Canvio 1TB USB SATA Drive Tests Via dd+diff+hdparm+bonnie
#
# 2013-02-23 - V#1-0
#
#            - 4th series of command line based testing using dd randomly generated data, 
#              cp, hdparm, and single bonnie++
#
#            - Using previously formatted Toshiba Canvio 1TB SATA drive using Ubuntu 12.04.x 
#              based gparted GUI, and drive directly connected to RaspberryPi-B USB port
#
#            - The following uses the Toshiba Canvio 1TB USB SATA Drive partition previously
#              created using the gparted GUI version on Ubuntu 12.04.4. Linux, NOT the
#              "parted -a optimal" and mkfs.ext4 RaspberryPi-B Debain Linux based command 
#              line tools 
# 
#            - dd to generate random data output files, make a copy of the outputfile,
#                and then use diff to confirm the copied file is correct
#
#            - bonnie++ to benchmark & stress test  
#
# 2015-01-02,
# 2015-05-20,
# 2015-05-30 - V#1-1 - Formatting & corrections ...
#
#############################################################################################
#
# Reference URLs:
#
# "Increase USB Flash Drive Write Speed" 
#    http://linux-howto-guide.blogspot.com/2009/10/increase-usb-flash-drive-write-speed.html
# 
# "Benchmark disk IO with DD and Bonnie++"
#    http://www.jamescoyle.net/how-to/599-benchmark-disk-io-with-dd-and-bonnie
#
#############################################################################################
#
# IMPORTANT NOTE: all of the following tests ARE NOT done with the external USB SATA drive 
#  connected to a separately powered USB hub ... the USB SATA drive is connected directly
#  to one of the two the Raspberrypi USB ports for all of the following tests ... 
#
#############################################################################################

# Using some of the sample commands from the above URL ...

# First check out how the USB SATA drive is actually mounted ...

pi@rasp-srvr1 ~ $ df -h
Filesystem      Size  Used Avail Use% Mounted on
rootfs          7.2G  2.3G  4.7G  33% /
/dev/root       7.2G  2.3G  4.7G  33% /
devtmpfs        211M     0  211M   0% /dev
tmpfs            44M  216K   44M   1% /run
tmpfs           5.0M     0  5.0M   0% /run/lock
tmpfs            88M     0   88M   0% /run/shm
/dev/mmcblk0p1   56M   19M   38M  34% /boot
/dev/sda1       917G   72M  871G   1% /media/USB-HDD1 

# So per the above, the device "/dev/sda1" is mounted as "/media/USB-HDD1" ... 

#############################################################################################
#
# Part 1 - Test the Toshiba Canvio USB SATA drive with hdparm, and then a series of
#           dd commands to utilize large percentages of the 1TB storage capacity ...
#
# Objective here is to see if either the Raspberrypi and/or the external Toshiba Canvio USB 
#   SATA drive fails ... 
#
#############################################################################################

# Do first test with hdparm ... 

pi@rasp-srvr1 ~ $  sudo hdparm -tT /dev/sda

/dev/sda:
 Timing cached reads:   298 MB in  2.00 seconds = 148.67 MB/sec
 Timing buffered disk reads:  74 MB in  3.11 seconds =  23.83 MB/sec


# Before running tests, make sure the external Toshiba drive is cleaned up ...

pi@rasp-srvr1 ~ $ ls -l /media/USB-HDD1/
total 28
drwxr-xr-x 2 pi   pi    4096 Jan  7 17:09 Desktop
drwx------ 2 root root 16384 Feb 23 16:46 lost+found
-rw-r--r-- 1 pi   pi    5781 Feb 23 18:13 ocr_pi.png

pi@rasp-srvr1 ~ $ rm -rf /media/USB-HDD1/Desktop/

pi@rasp-srvr1 ~ $ rm /media/USB-HDD1/ocr_pi.png

pi@rasp-srvr1 ~ $ ls -l /media/USB-HDD1/
total 16
drwx------ 2 root root 16384 Feb 23 16:46 lost+found

pi@rasp-srvr1 ~ $  df -h /media/USB-HDD1/
Filesystem      Size  Used Avail Use% Mounted on
/dev/sda1       917G   72M  871G   1% /media/USB-HDD1  

# Next use a series of dd to copy a bunch of randomly generated data onto the USB SATA 
#   drive ...


# First is count=100 bs=1M ... (NOTE: parted based ext4 test ran real 1m42.925s )

pi@rasp-srvr1 ~ $ time dd count=100 bs=1M if=/dev/urandom of=/media/USB-HDD1/test1
100+0 records in
100+0 records out
104857600 bytes (105 MB) copied, 101.311 s, 1.0 MB/s

real	1m41.331s
user	0m0.010s
sys	1m32.150s

pi@rasp-srvr1 ~ $ ls -l /media/USB-HDD1/test1
-rw-r--r-- 1 pi pi 104857600 Feb 23 18:27 /media/USB-HDD1/test1

pi@rasp-srvr1 ~ $ rm /media/USB-HDD1/test1


# Next is count=200 bs=1M ... (NOTE: parted based ext4 test ran real 3m30.676s )

pi@rasp-srvr1 ~ $ time dd count=200 bs=1M if=/dev/urandom of=/media/USB-HDD1/test1
200+0 records in
200+0 records out
209715200 bytes (210 MB) copied, 214.613 s, 977 kB/s

real	3m34.633s
user	0m0.010s
sys	3m4.150s

pi@rasp-srvr1 ~ $ ls -l /media/USB-HDD1/test1
-rw-r--r-- 1 pi pi 209715200 Feb 23 18:32 /media/USB-HDD1/test1

pi@rasp-srvr1 ~ $ rm /media/USB-HDD1/test1


# Next is count=300 bs=1M ... (NOTE: parted based ext4 test ran real 5m26.577s ) 

pi@rasp-srvr1 ~ $ time dd count=300 bs=1M if=/dev/urandom of=/media/USB-HDD1/test1
300+0 records in
300+0 records out
314572800 bytes (315 MB) copied, 325.73 s, 966 kB/s

real	5m25.749s
user	0m0.000s
sys	4m35.740s 

pi@rasp-srvr1 ~ $ ls -l /media/USB-HDD1/test1
-rw-r--r-- 1 pi pi 314572800 Feb 17 19:33 /media/USB-HDD1/test1

pi@rasp-srvr1 ~ $ rm /media/USB-HDD1/test1


# Next is count=400 bs=1M ... (NOTE: parted based ext4 test ran real 7m5.814s )

pi@rasp-srvr1 ~ $ time dd count=400 bs=1M if=/dev/urandom of=/media/USB-HDD1/test1
400+0 records in
400+0 records out
419430400 bytes (419 MB) copied, 442.379 s, 948 kB/s

real	7m22.399s
user	0m0.040s
sys	6m7.260s

pi@rasp-srvr1 ~ $ ls -l /media/USB-HDD1/test1
-rw-r--r-- 1 pi pi 419430400 Feb 23 18:52 /media/USB-HDD1/test1

pi@rasp-srvr1 ~ $ rm /media/USB-HDD1/test1


# Next is count=100 bs=2M ... (NOTE: parted based ext4 test ran real 3m29.581s )

pi@rasp-srvr1 ~ $ time dd count=100 bs=2M if=/dev/urandom of=/media/USB-HDD1/test1
100+0 records in
100+0 records out
209715200 bytes (210 MB) copied, 219.581 s, 955 kB/s

real	3m39.603s
user	0m0.020s
sys	3m3.370s

pi@rasp-srvr1 ~ $ ls -l /media/USB-HDD1/test1
-rw-r--r-- 1 pi pi 209715200 Feb 23 18:58 /media/USB-HDD1/test1

pi@rasp-srvr1 ~ $ rm /media/USB-HDD1/test1


# Next is count=200 bs=2M ... (NOTE: parted based ext4 test ran real 7m9.296s )

pi@rasp-srvr1 ~ $  time dd count=200 bs=2M if=/dev/urandom of=/media/USB-HDD1/test1
200+0 records in
200+0 records out
419430400 bytes (419 MB) copied, 420.353 s, 998 kB/s

real	7m0.374s
user	0m0.000s
sys	6m7.050s

pi@rasp-srvr1 ~ $ ls -l /media/USB-HDD1/test1
-rw-r--r-- 1 pi pi 419430400 Feb 23 19:58 /media/USB-HDD1/test1

pi@rasp-srvr1 ~ $ rm /media/USB-HDD1/test1


# Next is count=300 bs=2M ... (NOTE: parted based ext4 test ran real 10m50.128s )

pi@rasp-srvr1 ~ $ time dd count=300 bs=2M if=/dev/urandom of=/media/USB-HDD1/test1
300+0 records in
300+0 records out
629145600 bytes (629 MB) copied, 656.918 s, 958 kB/s

real	10m56.945s
user	0m0.010s
sys	9m10.230s

pi@rasp-srvr1 ~ $ ls -l /media/USB-HDD1/test1
-rw-r--r-- 1 pi pi 629145600 Feb 23 20:13 /media/USB-HDD1/test1

pi@rasp-srvr1 ~ $ rm /media/USB-HDD1/test1


#############################################################################################
# 
#  Part 2 - Use dd to create test output file, make a copy, and then use diff to validate 
#    the consistency of both files ...
# 
#############################################################################################

# First remove all previous test files ...

pi@rasp-srvr1 ~ $ rm /media/USB-HDD1/test1*

pi@rasp-srvr1 ~ $ df -h /media/USB-HDD1/
Filesystem      Size  Used Avail Use% Mounted on
/dev/sda1       917G   72M  871G   1% /media/USB-HDD1

# Next create the base output file test1 using dd count=100 bs=1M ... (NOTE: parted based 
#   ext4 test ran real 1m46.674s )

pi@rasp-srvr1 ~ $ time dd count=100 bs=1M if=/dev/urandom of=/media/USB-HDD1/test1
100+0 records in
100+0 records out
104857600 bytes (105 MB) copied, 107.03 s, 980 kB/s

real	1m47.051s
user	0m0.000s
sys	1m31.720s 

pi@rasp-srvr1 ~ $ sync; sync; sync

# Create a copy of test1 called test1_copy

pi@rasp-srvr1 ~ $ cp /media/USB-HDD1/test1 /media/USB-HDD1/test1_copy

pi@rasp-srvr1 ~ $ sync; sync; sync

# Use diff to confirm & validate both files match ...

pi@rasp-srvr1 ~ $ diff -s /media/USB-HDD1/test1 /media/USB-HDD1/test1_copy
Files /media/USB-HDD1/test1 and /media/USB-HDD1/test1_copy are identical


# Re-run the above test sequence, creating a dd output file test1 using count=200 bs=1M ...
#  (NOTE: parted based ext4 test ran real 3m40.302s )

pi@rasp-srvr1 ~ $ rm /media/USB-HDD1/test1*

pi@rasp-srvr1 ~ $  df -h /media/USB-HDD1/
Filesystem      Size  Used Avail Use% Mounted on
/dev/sda1       917G   72M  871G   1% /media/USB-HDD1

pi@rasp-srvr1 ~ $  time dd count=200 bs=1M if=/dev/urandom of=/media/USB-HDD1/test1
200+0 records in
200+0 records out
209715200 bytes (210 MB) copied, 219.542 s, 955 kB/s

real	3m39.562s
user	0m0.000s
sys	3m3.370s

pi@rasp-srvr1 ~ $ sync; sync; sync

pi@rasp-srvr1 ~ $ cp /media/USB-HDD1/test1 /media/USB-HDD1/test1_copy

pi@rasp-srvr1 ~ $ sync; sync; sync

pi@rasp-srvr1 ~ $ diff -s /media/USB-HDD1/test1 /media/USB-HDD1/test1_copy
Files /media/USB-HDD1/test1 and /media/USB-HDD1/test1_copy are identical


# Re-run the above test sequence, creating a dd output file test1 using count=300 bs=1M ...
#  (NOTE: parted based ext4 test ran real 5m32.304s )

pi@rasp-srvr1 ~ $ rm /media/USB-HDD1/test1*

pi@rasp-srvr1 ~ $  df -h /media/USB-HDD1/
Filesystem      Size  Used Avail Use% Mounted on
/dev/sda1       917G   72M  871G   1% /media/USB-HDD1

pi@rasp-srvr1 ~ $ time dd count=300 bs=1M if=/dev/urandom of=/media/USB-HDD1/test1
300+0 records in
300+0 records out
314572800 bytes (315 MB) copied, 336.263 s, 935 kB/s

real	5m36.289s
user	0m0.000s
sys	4m35.000s

pi@rasp-srvr1 ~ $ sync; sync; sync

pi@rasp-srvr1 ~ $ cp /media/USB-HDD1/test1 /media/USB-HDD1/test1_copy

pi@rasp-srvr1 ~ $ sync; sync; sync

pi@rasp-srvr1 ~ $ diff -s /media/USB-HDD1/test1 /media/USB-HDD1/test1_copy
Files /media/USB-HDD1/test1 and /media/USB-HDD1/test1_copy are identical


# Re-run the above test sequence, creating a dd output file test1 using count=400 bs=1M ...
#  (NOTE: parted based ext4 test ran real 7m35.381s )

pi@rasp-srvr1 ~ $ rm /media/USB-HDD1/test1*

pi@rasp-srvr1 ~ $ df -h /media/USB-HDD1/
Filesystem      Size  Used Avail Use% Mounted on
/dev/sda1       917G   72M  871G   1% /media/USB-HDD1

pi@rasp-srvr1 ~ $ time dd count=400 bs=1M if=/dev/urandom of=/media/USB-HDD1/test1
400+0 records in
400+0 records out
419430400 bytes (419 MB) copied, 453.23 s, 925 kB/s

real	7m33.257s
user	0m0.030s
sys	6m6.590s

pi@rasp-srvr1 ~ $ sync; sync; sync

pi@rasp-srvr1 ~ $ cp /media/USB-HDD1/test1 /media/USB-HDD1/test1_copy

pi@rasp-srvr1 ~ $ sync; sync; sync

pi@rasp-srvr1 ~ $ diff -s /media/USB-HDD1/test1 /media/USB-HDD1/test1_copy
Files /media/USB-HDD1/test1 and /media/USB-HDD1/test1_copy are identical

pi@rasp-srvr1 ~ $ df -h /media/USB-HDD1/
Filesystem      Size  Used Avail Use% Mounted on
/dev/sda1       917G  872M  870G   1% /media/USB-HDD1 


#############################################################################################
# 
#  Part 3 - Test the external USB SATA drive using bonnie++ 
# 
#############################################################################################

# See if bonnie++ is already installed ...

pi@rasp-srvr1 ~ $ which bonnie++
/usr/sbin/bonnie++

# If already installed per above, skip ahead to "bonnie++ Simple Testing & Benchmarking Runs"

# Otherwise, install bonnie++ via apt-get ...

pi@rasp-srvr1 ~ $ sudo apt-get update
Hit http://repository.wolfram.com stable Release.gpg
Hit http://repository.wolfram.com stable Release
Get:1 http://raspberrypi.collabora.com wheezy Release.gpg [836 B]
Get:2 http://mirrordirector.raspbian.org wheezy Release.gpg [490 B]
Get:3 http://raspberrypi.collabora.com wheezy Release [5,009 B]

   < ... snip ... >

Ign http://mirrordirector.raspbian.org wheezy/rpi Translation-en_US
Ign http://mirrordirector.raspbian.org wheezy/rpi Translation-en
Fetched 7,445 kB in 46s (160 kB/s)
Reading package lists... Done

pi@rasp-srvr1 ~ $ sudo apt-cache search bonnie++
bonnie++ - Hard drive benchmark suite.

pi@rasp-srvr1 ~ $ sudo apt-get install bonnie++
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following NEW packages will be installed:
  bonnie++
0 upgraded, 1 newly installed, 0 to remove and 2 not upgraded.
Need to get 68.1 kB of archives.
After this operation, 171 kB of additional disk space will be used.
Get:1 http://mirrordirector.raspbian.org/raspbian/ wheezy/main bonnie++ armhf 1.96 [68.1 kB]
Fetched 68.1 kB in 0s (99.2 kB/s)
Selecting previously unselected package bonnie++.
(Reading database ... 70321 files and directories currently installed.)
Unpacking bonnie++ (from .../bonnie++_1.96_armhf.deb) ...
Processing triggers for man-db ...
Setting up bonnie++ (1.96) ...

pi@rasp-srvr1 ~ $ which bonnie++
/usr/sbin/bonnie++

#
# bonnie++ Simple Testing & Benchmarking Runs
# 

# Per reference URLs section, do the first bonnie++ simple benchmarking run ...
# 
# First clean-up the external USB SATA drive, and then do the first bonnie++ test ... 

pi@rasp-srvr1 ~ $ df -h /media/USB-HDD1/
Filesystem      Size  Used Avail Use% Mounted on
/dev/sda1       917G   72M  871G   1% /media/USB-HDD1

pi@rasp-srvr1 ~ $ ls -l /media/USB-HDD1/
total 16
drwx------ 2 root root 16384 Feb 23 16:46 lost+found
pi@rasp-srvr1 ~ $  rm  /media/USB-HDD1/test*

pi@rasp-srvr1 ~ $ df -h /media/USB-HDD1/
Filesystem      Size  Used Avail Use% Mounted on
/dev/sda1       917G   72M  871G   1% /media/USB-HDD1

# VERY IMPORTANT to first run bonnie++ with the correct run-time parameters ... 

# So first run with the target file size @ 250MB and DO NOT specify anything
#   about amount of Raspberrypi RAM .... 

pi@rasp-srvr1 ~ $ bonnie++ -d /media/USB-HDD1/ -u pi -b -s 250
Using uid:1000, gid:1000.
File size should be double RAM for good results, RAM is 436M.
usage:
bonnie++ [-d scratch-dir] [-c concurrency] [-s size(MiB)[:chunk-size(b)]]
      [-n number-to-stat[:max-size[:min-size][:num-directories[:chunk-size]]]]
      [-m machine-name] [-r ram-size-in-MiB]
      [-x number-of-tests] [-u uid-to-use:gid-to-use] [-g gid-to-use]
      [-q] [-f] [-b] [-p processes | -y] [-z seed | -Z random-file]
      [-D]

Version: 1.96 

# So per above, amount of free RAM is 436M, and the file size should be 
#   436MB x 2 = 872MB

pi@rasp-srvr1 ~ $  time bonnie++ -d /media/USB-HDD1/ -u pi -r 436 -b -s 872
Using uid:1000, gid:1000.
Writing a byte at a time...done
Writing intelligently...done
Rewriting...done
Reading a byte at a time...done
Reading intelligently...done
start 'em...done...done...done...done...done...
Create files in sequential order...done.
Stat files in sequential order...done.
Delete files in sequential order...done.
Create files in random order...done.
Stat files in random order...done.
Delete files in random order...done.
Version  1.96       ------Sequential Output------ --Sequential Input- --Random-
Concurrency   1     -Per Chr- --Block-- -Rewrite- -Per Chr- --Block-- --Seeks--
Machine        Size K/sec %CP K/sec %CP K/sec %CP K/sec %CP K/sec %CP  /sec %CP
rasp-srvr1     872M    45  98  6627  13  5015  12   361  99 27508  31  62.9   9
Latency               276ms    4226ms    6013ms   42624us     366ms    1521ms
Version  1.96       ------Sequential Create------ --------Random Create--------
rasp-srvr1          -Create-- --Read--- -Delete-- -Create-- --Read--- -Delete--
              files  /sec %CP  /sec %CP  /sec %CP  /sec %CP  /sec %CP  /sec %CP
                 16    26   1 +++++ +++    41   1    29   1 +++++ +++    43   1
Latency               400ms    4323us     642ms     201ms     273us     544ms
1.96,1.96,rasp-srvr1,1,1393242365,872M,,45,98,6627,13,5015,12,361,99,27508,31,62.9,9,16,,,,,26,1,+++++,+++,41,1,29,1,+++++,+++,43,1,276ms,4226ms,6013ms,42624us,366ms,1521ms,400ms,4323us,642ms,201ms,273us,544ms

real	41m40.073s
user	0m5.670s
sys	2m32.040s


# Good news is the above bonnie++ test run successfully completed at over 4 times faster than
#   the previous test of the Toshiba Canvio 1TB USB SATA Drive partitioned & formatted 
#   using the RaspberryPi-B's Debian Linux Command line tools ...

# Important Note: the previous exact same bonnie++ single instance, non-parallel test on the 
#   Toshiba Canvio 1TB USB SATA Drive partitioned & formatted with the RaspberryPi-B based
#   Debian Linux "parted -a optimal" + mkfs.ext4 command line tools resulted in tests that
#   took a lot longer at real 189m38.246s versus the 41m40.073s above ... 
#
#      ... again over 4 times faster !!

